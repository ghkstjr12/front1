package project_5;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;

public class OrderItemProgram {
	static Scanner sc = new Scanner(System.in);
	static ArrayList<Product> list = new ArrayList<>();
	static ArrayList<Review> reviews = new ArrayList<>();
	public static void main(String[] args) {
		ProductFunction pf = new ProductFunction();
		int menu;
		product();
		reviews();
		while(true) {
			System.out.println("\t\t\t~환영합니다~");
			System.out.println("=========================================================");
			System.out.println("메뉴 :: 1.상품 조회 | 2.상품 구매 | 3.리뷰 등록 | 4.리뷰 삭제 | 5.종료");
			System.out.println("---------------------------------------------------------");
			System.out.print("메뉴를 선택하세요 > ");
			menu = sc.nextInt();
			switch(menu) {
			case 1:
				pf.productList(list);
				System.out.print("상품 상세보기를 진행할까요? (y/n) > ");
				String input = sc.next();
				if(input.equals("n")) {
					continue;
				}
				System.out.print("자세히 보고싶은 상품의 번호를 입력하세요 > ");
				int num = sc.nextInt();
				Product detail = list.get(num-1);
				pf.showList(detail);
				showreview(num);
				break;
			case 2:
				pf.productList(list);
				while(true) {
					System.out.print("구매하실 상품의 번호를 입력하세요 > ");
					num = sc.nextInt();
					if(num-1 > list.size()) {
						System.out.println("존재하지 않는 상품번호 입니다. 다시 입력해주세요");
					}else break;
				}
				Product buy = list.get(num-1);
				pf.buyProduct(buy);
				break;
			
			case 5:
				writeToFile();
				System.exit(0);
				break;
			default:
				System.out.println("메뉴를 다시 입력해주세요.");
				break;
				
			}
		}
		
		        Scanner scanner = new Scanner(System.in);
		        ArrayList<Review> reviewList = new ArrayList<>();

		        // 리뷰 작성
		        System.out.print("리뷰를 작성할 사용자 이름을 입력하세요: ");
		        String userName = scanner.nextLine();
		        
		        // 리뷰 내용을 ArrayList로 저장
		        ArrayList<String> contentList = new ArrayList<>();
		        System.out.println("리뷰 내용을 입력하세요 (종료: 빈 줄 입력)");
		        while (true) {
		            String line = scanner.nextLine();
		            if (line.isEmpty()) {
		                break;
		            }
		            contentList.add(line);
		        }

		        // 리뷰 객체 생성
		        Review review = new Review(userName, contentList);
		        reviewList.add(review);

		        // 생성된 리뷰 확인
		        System.out.println("생성된 리뷰:");
		        for (Review r : reviewList) {
		            System.out.println("고유번호: " + r.getId());
		            System.out.println("작성자: " + r.getName());
		            System.out.println("내용: " + r.getContentList());
		        }

		        scanner.close();
		    }
		}

	}
	
	//상품 객체 생성 함수
	public static void product() {
		 // 파일에서 상품목록 읽어오기
        BufferedReader reader;
		try {
			reader = new BufferedReader(new FileReader("res/상품목록.txt"));
	        String line;
	        while ((line = reader.readLine()) != null) {
	            // 콤마로 구분된 문자열을 분리하여 상품 이름, 가격, 재고 불러옴
	            String[] data = line.split(",");
	           
	            String name = data[0];
	            int price = Integer.parseInt(data[1]);
	            int stock = Integer.parseInt(data[2]);
	            String desc = data[3];
	            
	            list.add(new Product(name, price, stock,desc));
	        }

		} catch (IOException | NumberFormatException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}


	}
	public static void reviews() {
	BufferedReader reader;
	try {
		reader = new BufferedReader(new FileReader("res/리뷰목록.txt"));
        String line;
        int index=0;
        while ((line = reader.readLine()) != null) {
            // 콤마로 구분된 문자열을 분리하여 상품 이름, 가격, 재고 불러옴
            String[] data = line.split(",");
           
            String name = data[0];
            reviews.add(new Review(name));
			for (int i = 1; i < data.length; i++) {
				reviews.get(index).setReview(data[i]);
			}
			index++;
            
            
        }
//        for(Review r : reviews) {
//        	System.out.println(r);
//        }

	} catch (IOException | NumberFormatException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
}

public static void showreview(int num) {
	for(int i=0;i<reviews.size();i++) {
		if(list.get(num-1).getName().equals(reviews.get(i).getName())) {
			ArrayList<String> r = reviews.get(i).getReview();
			for (String review : r) {
				System.out.println(review);
			}
		}
	}
	
}
	
	// 수정된 정보 파일에 쓰기 함수
	public static void writeToFile() {
		try {
			FileWriter fw = new FileWriter("res/상품목록.txt");
			for(Product p : list) {
				String line = p.getName()+","+p.getPrice()+","+p.getStock()+","+p.getDesc()+"\n";
				fw.write(line);
			}
			fw.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	

}