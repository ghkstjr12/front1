package project_5;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import Project.Review;

public class OrderItemProgram {
	static Scanner sc = new Scanner(System.in);// (http://system.in/));

	public static void main(String[] args) {
		ArrayList<Product> list = new ArrayList<>();
		int menu;

		//상품 목록 생성
		product(list);

		while (true) {
			System.out.println("\t\t\t~환영합니다~");
			System.out.println("=========================================================");
			System.out.println("메뉴 :: 1.상품 조회 | 2.상품 구매 | 3.리뷰 등록 | 4.리뷰 삭제 | 5.종료");
			System.out.println("---------------------------------------------------------");
			System.out.print("메뉴를 선택하세요 > ");
			menu = sc.nextInt();
			switch (menu) {
			case 1:
				showList(list);
				break;
			case 2:
				buyProduct(list);
				break;
			case 5:
				System.exit(0);
				break;
			default:
				System.out.println("메뉴를 다시 입력해주세요.");
				break;

			}
		}

	}

	//상품 객체 생성 함수
	public static void product(ArrayList<Product> list) {
		// 파일에서 상품목록 읽어오기
		BufferedReader reader;
		try {
			reader = new BufferedReader(new FileReader("res/상품목록.txt"));
			String line;
			while ((line = reader.readLine()) != null) {
				// 콤마로 구분된 문자열을 분리하여 상품 이름, 가격, 재고 불러옴
				String[] data = line.split(",");

				String name = data[0];
				int price = Integer.parseInt(data[1]);
				int stock = Integer.parseInt(data[2]);
				String desc = data[3];

				list.add(new Product(name, price, stock, desc));
			}

		} catch (IOException | NumberFormatException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}
	
	 // 리뷰 작성 기능
    private static void writeReview(List<Product> products, Scanner scanner) {
        System.out.print("리뷰작성을 원하는 상품 번호를 입력하세요: ");
        int productIndex = scanner.nextInt() - 1;
        if (productIndex >= 0 && productIndex < Product.size()) {
            scanner.nextLine(); // consume newline
            Product1 selectedProduct = Product.get(productIndex);
            System.out.print("리뷰를 입력하세요: ");
            String reviewText = scanner.nextLine();
            System.out.print("만족도를 선택해주세요. (1-5): ");
            int rating = scanner.nextInt();
            Review review = new Review(reviewText, rating);
            selectedProduct.addReview(review);
            System.out.println("리뷰가 성공적으로 등록되었습니다.");
        } else {
            System.out.println("유효하지 않은 상품번호입니다.");
        }
    }

//상품 목록 함수
	public static void productList(ArrayList<Product> list) {
		String formattedNum = String.format("%-8s", "상품번호");
		String formattedName = String.format("%-20s", "상품명");
		String formattedPrice = String.format("%-10s", "가격");
		String formattedStock = String.format("%-10s", "재고");
		System.out.println("==========================☆★상품 목록★☆==========================");
		System.out.println(formattedNum + "\\t" + formattedName + "\\t" + formattedPrice + "\\t" + formattedStock);
		System.out.println("---------------------------------------------------------------");
		for (int i = 0; i < list.size(); i++) {
			System.out.println((i + 1) + "\\t   " + list.get(i));
		}
		System.out.println("---------------------------------------------------------------");
	}

//상품 목록 및 상세보기 함수
	public static void showList(ArrayList<Product> list) {
		int num;
		productList(list);
		System.out.print("자세히 보고싶은 상품의 번호를 입력하세요 > ");
		num = sc.nextInt();
		System.out.println("\\n================☆★상세 보기★☆=================");
		String formattedName2 = String.format("%-20s", list.get(num - 1).getName());
		String formattedPrice2 = String.format("%-10s", list.get(num - 1).getPrice() + "원");
		String formattedStock2 = String.format("%-10s", list.get(num - 1).getStock() + "개");
		System.out.println(String.format("%-20s", "상품명") + "\\t" + String.format("%-10s", "가격") + "\\t"
				+ String.format("%-10s", "재고"));
		System.out.println("--------------------------------------------");
		System.out.println(formattedName2 + "\\t" + formattedPrice2 + "\\t" + formattedStock2);
		System.out.println("============================================");
		System.out.print("상품설명 >> ");
		System.out.print(list.get(num - 1).getDesc());
		System.out.println("\\n--------------------------------------------");
		System.out.print("상품후기");
		System.out.println("\\n--------------------------------------------");
		System.out.println();
	}
//구매 부분
	public static void buyProduct(ArrayList<Product> list) {
		int num;
		int price;
		int stock;
		boolean check = true;
		productList(list);
		System.out.print("구매하실 상품의 번호를 입력하세요 > ");
		num = sc.nextInt();
		System.out.println(list.get(num - 1));
		if (list.get(num - 1).getStock() == 0) {
			System.out.println("품절된 상품입니다.");
		} else {
			while (check) {
				System.out.print("가격을 입력하세요 > ");
				price = sc.nextInt();
				if (price != list.get(num - 1).getPrice())
					System.out.println("가격이 맞지 않습니다. 다시 입력해주세요");
				else {
					check = false;
				}
			}
			check = true;
			while (check) {
				System.out.print("구매수량을 입력해주세요 > ");
				stock = sc.nextInt();
				if (stock > list.get(num - 1).getStock()) {
					System.out.println("재고가 부족합니다. 다시 입력해주세요");
				} else {
					list.get(num - 1).stockCheck(stock);
					System.out.println("구매가 완료되었습니다!");
					check = false;
				}
			}
		}

	}
}
